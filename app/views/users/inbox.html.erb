<h2>Messages <%= @view.to_s.capitalize %></h2>

<div class='row-fluid'>
	<div class='span3'>
		<div class='row-fluid' id='compose-wrapper'>
			<a class='btn span12' id='compose_bt' href='#compose'>
				<i class='icon-pencil'></i>&nbsp; Compose
			</a>
		</div>
		<div class='row-fluid' id='replyAll-wrapper'>
			<a class='btn span12' id='replyAll_bt' href='#replyall'>
				Reply&nbsp; <i class='icon-hand-right'></i>
			</a>
		</div>
		<br/>
		<div class='row-fluid'>
			<ul class="nav nav-tabs nav-stacked" id='lmenu'>
				
				<li class='l-nav' id='unread_tab'><a href='/user/inbox?v=unread' class=''>Unread 
					<span class='badge pull-right count' id='unreaded-size'><%= @received.unreaded.size %></span>
				</a></li>

				<li class='l-nav' id='read_tab'><a href='/user/inbox?v=read' class=''>Read
					<span class='badge pull-right count' id='readed-size'><%= @received.readed.size %></span>
				</a></li>

				<li class='l-nav' id='sent_tab'><a href='/user/inbox?v=sent' class=''>Sent 
					<span class='badge pull-right count' id='sent-size'><%= @sent.size %></span>
				</a></li>

				<li class='l-nav' id='trash_tab'><a href='/user/inbox?v=trash' class=''>Trash
					<span class='badge pull-right count' id='deleted-size'><%= @deleted.size %></span>
				</a></li>
			</ul>
		</div>


		<div class='row-fluid'>
			<span class='btn btn-mini btn-inverse' id='block-emails-bt' data-name="inbox_block_emails">
				<input type='checkbox' data-name="inbox_block_emails" id="prop-block-emails" <%= 'checked' if @block_emails%>/>&nbsp;Block Notification Forwarding
			</span>
		</div>

		<br/>
		<br/>
					
	</div>

	<div class='span9'>

		<div class='row-fluid' id='compose_panel'>
				<span class='pull-right' id='compose_close_bt'>
					<i class='icon-remove'></i>
				</span>

				<div id='to-wrapper'>
				<span id='to-label'>To &nbsp; </span><span id='message-recipients'></span><input type='text' id='user-search'/>
				</div>
				<hr class='compose-hr1'/>

				<input type='text' placeholder="Subject" id='compose-subject'/>

				<hr class='compose-hr2'/>

				<textarea id='compose-body'></textarea>

				<hr class='compose-hr3'/>
				<button class='btn btn-small btn-primary' id='send_bt'>Send</button>
		</div>

		<div class='row-fluid' id='cmessage' data-id=''>
			<div class='btn-group'>
				<a href='#' class="btn btn-mini" target='_blank' id='cmessage-from-link'>
					<i class='icon-user'></i>&nbsp;
					<span id='cmessage-from-name'></span>
				</a>
				<button class="btn btn-mini disabled">
					<span id='cmessage-from-email'></span>
				</button>
			</div>

			<% if @view == :sent %>
				<i class='icon-arrow-right'></i>
				<div class='btn-group'>
					<a href='#' class="btn btn-mini" target='_blank' id='cmessage-to-link'>
						<i class='icon-user'></i>&nbsp;
						<span id='cmessage-to-name'></span>
					</a>
					<button class="btn btn-mini disabled"><span id='cmessage-to-email'></span>
					</button>
				</div>
			<% end %>

			<span class='pull-right' id='cmessage_close_bt' href='#'>
				<i class='icon-remove'></i>
			</span>

			<hr class='cmessage-hr1'/>
			<div placeholder="Subject" id='cmessage-subject'></div>

			<hr class='compose-hr2'/>

			<div id='cmessage-body'></div>

			<hr class='cmessage-hr3'/>

			<small id='cmessage-time'></small>
			<small class='pull-right' id='cmessage-time-ago'></small>

		</div>

		<div class='row-fluid' id='ibar'>
			<div class='btn btn-mini' id='messagesToggle_bt'>Toggle</div>

			<div class='btn-group'>
				<% if @view == :trash %>
					<button class='btn btn-mini' id='restore_bt'>Restore</button>
					<button class='btn btn-mini btn-danger' id='delete_bt'>Delete</button>
				<% else %>
					<% if @view != :sent %>
						<% if @view != :read %>
						<button class='btn btn-mini' id='mark_read_bt'>Mark as Read</button>
						<% end %>
						<% if @view != :unread %>
						<button class='btn btn-mini' id='mark_unread_bt'>Mark as Unread</button>
						<% end %>
					<% end %>
					<button class='btn btn-mini btn-danger' id='delete_bt'>Delete</button>
				<% end %>
			</div>
			<span class='badge badge-inverse'><span id='numMessagesSelected'>0</span> Selected</span>
		</div>

		<div class='ib-component'>

		<table width="100%" class='inbox_table' id='message-table'>
		<% @select_messages.process do |m| %>
			<%= render :partial => 'inbox_message', :locals => {:m => m} %>
		<% end %>
		</table>

	</div> <!---end of .ib-component-->
	</div> <!---end of .span9-->
</div>

<div class="modal hide fade" id="delete-confirm" style="display:none">
	<div class="modal-header">
		<a class="close" data-dismiss="modal">Ã—</a>
		<h3>Are you sure?</h3>
	</div>
	<div class="modal-body">
		<p id='delete-message'>You are about to delete <span class='badge badge-warning' id='delete-count'></span> message item<span id='delete-plural'>s</span>.</p>
	</div>
	<div class="modal-footer">
		<button class='btn btn-danger' id='yes-delete'>Yes, Delete</button>
		<a href="#" data-dismiss="modal" class="btn">Cancel</a>
	</div>
</div>

<div id='user-search-result'></div>

<script type='text/javascript' src='/assets/moment.js'></script>
<script type='text/javascript' src='<%= @faye_url %>.js'></script>
<script type='text/javascript'>
	var _faye_url = "<%= @faye_url %>";
</script>

<script type='text/javascript'>
	var _view = "";
	var _state = "";
	var _overMessageSelect = false;
	var _selectedMessages = null;
	var _selectedUsers = new Array();
	var _maxMemberSize = 0;
	var _maxMrowAgoSize = 0;
	var _people_result = null;
	var _userSearchEmpty = false;
	var _validStates = {"compose": 1, "": 1, "cmessage": 1, "replyall": 1};
	var _savedMessages = new Array();
	var _fclient = null;
	var _myid = null;
	var _is_firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
	//----MAIN-----

	$(function() {
		_myid = $('#hf-userID').val();
		console.log(_myid);
		var capture = /v=(\w+)/.exec(document.URL);
		if(capture) {
			_view = capture[1];
		}
		console.log(_view);
		if(_is_firefox) {
			restoreState();
		}
		try {
			_fclient = new Faye.Client(_faye_url);
		} catch(err) {
			console.log("FAYE NOT FOuND");
			console.log(err);
			_fclient = null;
		}

		if(_fclient) {
			var _fsub = _fclient.subscribe('/messages/'+_myid, function(data) {
				console.log(data);

				var target = $('#unreaded-size');
				if(target.length === 0) {
					target = $('#current-size');
				}
				target.html(parseInt(target.html())+1);

				if(_view === "unread") {
					prepend_message(data.message_row);
				} else {
					target.css("background-color", "orange");
				}
			});
		}

		adjustMemberLinks();
		window.onpopstate = restoreState;

		$('#block-emails-bt').click(function() {
			console.log("block-emails-bt click event");
			var cb = $('#prop-block-emails');
			cb.prop("checked", !cb.prop("checked"));
			var name = $(this).attr('data-name');

			console.log(name);
			var value = cb.prop("checked") ? true : false;
			console.log("VALUE = " + value);

			$.getJSON("/user/set_prop", {'name': name, 'value': value}, function(data) {
				console.log(data);
			});
		});
		$('#prop-block-emails').click(function(e) {
			//console.log("preventing default");
			e.preventDefault();
			e.stopPropagation();
		});

		$('#mark_read_bt').click(function() {
			console.log("Marking as read...");

			if(_selectedMessages.length == 0) {
				return;
			}

			var mids = _selectedMessages.join("\n");

			$.getJSON('/user/inbox_mark_read', {'mids': mids}, function(data) {
				console.log(data);
				if(!data.ok) {
					console.log("Error marking messages as read");
					return;
				}
				for(var i in _selectedMessages) {
					$('#message-row-'+_selectedMessages[i]).remove();
					delete _savedMessages[_selectedMessages[i]];
				}
				

				var v = parseInt($('#current-size').html());
				$('#current-size').html(v-data.found);

				v = parseInt($('#readed-size').html());
				$('#readed-size').html(v+data.found);

				stateRestore_normal();
			});
		});
		$('#mark_unread_bt').click(function() {
			console.log("Marking as unread...");

			if(_selectedMessages.length == 0) {
				return;
			}
			var mids = _selectedMessages.join("\n");
			$.getJSON('/user/inbox_mark_unread', {'mids': mids}, function(data) {
				console.log(data);
				if(!data.ok) {
					console.log("Error marking messages as unread");
					return;
				}
				for(var i in _selectedMessages) {
					$('#message-row-'+_selectedMessages[i]).remove();
					delete _savedMessages[_selectedMessages[i]];
				}

				var v = parseInt($('#current-size').html());
				$('#current-size').html(v-data.found);

				v = parseInt($('#unreaded-size').html());
				$('#unreaded-size').html(v+data.found);

				stateRestore_normal();
			});
		});

		$('#restore_bt').click(function() {
			console.log("Restoring messages...");
			if(_selectedMessages.length == 0) {
				return;
			}
			var mids = _selectedMessages.join("\n");
			$.getJSON('/user/inbox_restore', {'mids': mids}, function(data) {
				console.log(data);
				if(!data.ok) {
					console.log("Error marking messages as unread");
					return;
				}
				for(var i in _selectedMessages) {
					$('#message-row-'+_selectedMessages[i]).remove();
					delete _savedMessages[_selectedMessages[i]];
				}
				var v = parseInt($('#current-size').html());
				$('#current-size').html(v - data.found);
				$('#unreaded-size').html(data.unreaded);
				$('#readed-size').html(data.readed);

				stateRestore_normal();
			});


		});

		$('#yes-delete').click(function() {
			if(_selectedMessages.length == 0) {
				return;
			}
			var mids = _selectedMessages.join("\n");

			$.getJSON('/user/inbox_delete', {'mids': mids}, function(data) {
				console.log(data);
				if(data.ok) {
					var current = $('#current-size');
					var deleted = $('#deleted-size');
					if(deleted.length == 0) {
						deleted = $('#current-size');
					}


					var v = parseInt(current.html());
					current.html((v -= data.moved_to_trash));
					current.html(v - data.gone);

					v = parseInt(deleted.html());
					deleted.html(v+data.moved_to_trash);

					v = parseInt(deleted.html());
					deleted.html(v-data.permanently_deleted);

					for(i in _selectedMessages) {
						$('#message-row-'+_selectedMessages[i]).remove();
					}
					for(var i in mids) {
						delete _savedMessages[i];
					}
					stateRestore_normal();
				}
			});

			/*console.log(_selectedMessages.size);*/


			$('#deleted-size').html(_selectedMessages.size);
			$('#delete-confirm').modal('hide');
		});

		$('#compose-subject, #compose-body').live('focus', function() {
			/*console.log("compose subject focus");*/
			$('#user-search-result').hide();
			$('#user-search').hide();
		});
		$('.user-result').live('mouseenter', function() {
			$(".user-result").removeClass("user-selected");
			$(this).addClass('user-selected');
		});
		$('.user-result').live('click', function() {
			addSelectedUser();
		});
		$('#to-wrapper').click(function() {
			$('#user-search').show();
			$('#user-search').focus();
		});
		$('#user-search').live('keydown', function(e) {
			if(e.keyCode == 9) {
				//console.log("Tab event!");
				var v = $('#user-search').val();
				if(v.length > 0) {
					addSelectedUser();
					e.preventDefault();
					e.stopPropagation();
				}
				return;
			}
		});
		$('#user-search').live('keyup', function(e) {
			if(e.keyCode == 13 || e.keyCode == 9) {
				/*console.log("Enter event!");*/
				addSelectedUser();
				return;
			}
			if(e.keyCode == 38 && $('.user-selected').prev().is('.user-result')) {
				var target = $('.user-selected').prev();
				$('.user-result').removeClass('user-selected');
				target.addClass('user-selected');
				return;
			} 
			if(e.keyCode == 40 && $('.user-selected').next().is('.user-result')) {
				var target = $('.user-selected').next();
				$('.user-result').removeClass('user-selected');
				target.addClass('user-selected');
				return;
			}
			if(e.keyCode == 27) {
				$('#user-search-result').hide();
				$('#user-search').val("");
				return;
			}
			var v = $(this).val();
			if(e.keyCode == 8 && _userSearchEmpty && v.length == 0) {
				removeUser($('.user-label:last'));
				_userSearchEmpty = false; //give them a chance
				return;
			}
			if(v.length == 0 || v.match(/^\s+$/)) {
				$('#user-search-result').hide();
				$('#user-search').val("");
				_userSearchEmpty = true;
				return;
			} else {
				_userSearchEmpty = false;
			}
			
			$.getJSON("/users/mixed_search", {q:v}, function(data) {
				if(document.activeElement !== document.getElementById('user-search')) {
					return;
				}
				_people_result = data;
				if(data.length <= 0) {return;}
				// /*console.log(_people_result);*/
				var html = "";
				for(var i in _people_result) {
					html += "<div class='user-result' data-id='"+_people_result[i].id+"' data-index='"+i+"'><div class='name'>"+_people_result[i].name+"</div><div class='email'>"+_people_result[i].email+"</div></div>";
				}
				$('#user-search-result').html(html);

				var o = $('#to-label').offset();
				var io = $('#user-search').offset();

				$('#user-search-result').css('top',io.top+22);
				$('#user-search-result').css('left',o.left);
				$('#user-search-result').css('width',$('#user-search').width() + $('#message-recipients').width());
				$('#user-search-result').css('height',(32+10)*_people_result.length + 10);
				$('#user-search-result').delay(200).show(0);


				$('.user-result:first').addClass('user-selected');

				setTimeout(fixSearchWidth, 400);
			});
		});

		if(!_is_firefox) {
			$('#compose_bt').live('click',function() {
				/*console.log("Compose BT");*/
				if(history.state.state !== "compose") {
					history.pushState({state: 'compose'}, "Reciprosody", "#compose");
				}
				//stateRestore_compose();
			});
		}

		$('#compose_close_bt').live('click', function() {
			history.go(-1);
		});

		$('#cmessage_close_bt').click(function() {
			history.go(-1);
		});

		$('.messageSelect').live('mouseenter', function() {
			///*console.log("over message select");*/
			_overMessageSelect = true;
		});
		$('.messageSelect').live('mouseleave', function() {
			///*console.log("left message select");*/
			_overMessageSelect = false;
		});
		$('#messagesToggle_bt').click(function() {
			_overMessageSelect = true;
			$('.messageSelect').each(function() {
				$(this).click();
			});
			_overMessageSelect = false;
		});
		$('.messageSelect').live('change', updateSelected);

		$('#delete_bt').click(function() {
			/*console.log("DELETE!");*/
			if(_selectedMessages.length > 0) {
				$('#delete-confirm').modal('show');
				if(_selectedMessages.length == 1) {
					$('#delete-plural').html("");
				} else {
					$('#delete-plural').html("");
				}
				$('#delete-count').html(_selectedMessages.length);
			}
		});
		
		$('.user-label').live('mouseenter', function() {
			var id = $(this).attr('data-id');
			$('#user-search-result').html("<div class='user-result' data-id='"+id+"''><div class='name'>"+_selectedUsers[id].name+"</div><div class='email'>"+_selectedUsers[id].email+"</div></div>");
			$('#user-search-result').height(48);
			$('#user-search-result').show();
		});
		$('.user-label').live('mouseleave', function() {
			$('#user-search-result').hide();
		});
		$('.user-label').live('click', function() {
			var id = $(this).attr('data-id');
			$(this).remove();
			delete _selectedUsers[id];
			fixSearchWidth();
			$('#user-search-result').hide();
		});

		$('#send_bt').click(function() {
			var ids = new Array();
			$('.user-label').each(function(i) {
				// console.log($(this).attr('data-id'));
				ids.push($(this).attr('data-id'));
			});
			console.log(ids);
			var subject = $('#compose-subject').val();
			var body = $('#compose-body').val();

			// console.log("Subject: " + subject);
			// console.log("Body: " + body);

			//--do validation
			var blank = /^\s*$/;
			if(ids.length == 0 || subject.match(blank) || body.match(blank)) {
				console.log("Message not sent");

				setTimeout(stateRestore_compose, 500);
				return;
			}

			console.log("Sending Message...");
			var sendback = {'to': ids, 'subject': subject, 'body': body};

			if(_state === 'replyall') {
				sendback['replyto'] = $(this).attr('data-replyto');
			}
			console.log(sendback);

			$.getJSON('/user/send_message', sendback, function(data) {
				console.log(data);
				stateRestore_normal();
				clear_compose();

				var target = $('#sent-size');
				if(target.length == 0) { target = $('#current-size');}
				target.html(parseInt(target.html())+ids.length);

				if(_view == "sent") {
					for(var i in data.message_rows) {
						prepend_message(data.message_rows[i]);
					}
				}
			});

		});

		$('.message-row').live('click', function() {
			if(_overMessageSelect) {
				return;
			}
			mid = $(this).attr('data-id');
			console.log("MID = " + mid);
			if(!mid) { return; }

			history.pushState({state: 'cmessage'+mid}, "Reciprosody", "#cmessage-"+mid);

			stateRestore_cmessage(mid);
			
		});
	}); //end of document.ready

	//------FUNCTIONS---------------------------------------------
	function removeUser(user) {
		var id = user.attr('data-id');
		user.remove();
		delete _selectedUsers[id];

		/*console.log("Selected Users:");*/
		/*console.log(_selectedUsers);*/
	}
	function fixSearchWidth() {
		/*console.log("fixing search width");*/
		var currentWidth = $('#user-search').width();
		var newWidth = $('#compose_panel').width() - $('#to-label').width() - $('#message-recipients').width() - 200;

		if(newWidth < currentWidth && newWidth > 200) {
			$('#user-search').width(newWidth);
		} else if(newWidth > currentWidth) {
			$('#user-search').width(newWidth);
		}
	}
	function prepend_message(html) {
		$('#message-table').prepend(html);
		adjustMemberLinks();
	}
	function clear_compose() {
		$('#compose-subject').val("");
		$('#message-recipients').html("");
		_selectedUsers = new Array();
		$('#compose-body').val("");
	}
	function goToBase() {
		url = window.location.href;
		url = url.replace(/\&mid=\d+\#*.*$/, '')
		window.location.href = url;
	}
	function addSelectedUser() {
		$('#user-search-result').hide();
		$('#user-search').val("");

		var user = $('.user-selected');
		if(user.length == 0) {
			return;
		}

		var name = user.find('.name').text();
		var email = user.find('.email').text();
		var id = user.attr('data-id');

		if(id == _myid) {
			return;
		}

		if(_selectedUsers[id]) { return; }
		
		_selectedUsers[id] = {
			'name': name,
			'email': email,
			'id': id
		};

		// $('#user-search-result').hide();
		/*console.log(_selectedUsers);*/

		$('#message-recipients').append('<span class="label user-label" data-id="'+id+'"><i class="icon-user"></i>&nbsp; '+name+'&nbsp;<i class="icon-remove"></i></span>');

		// $('#to-label').height($('#message-recipients').height());
	}
	function restoreState() {
		/*console.log("restoring state");*/
		var capture = /v=(\w+)/.exec(document.URL);
		if(capture) {
			_view = capture[1];
		}
		var target = $('#'+_view + "_tab");
		if(target.length) {
			target.addClass('active');
		} else {
			$('#unread_tab').addClass('active');
			_view = "unread";
		}
		//console.log("VIEW = " + _view);
		$('#lmenu').find(".active a .count").css('background-color', 'black');
		$('#lmenu').find(".active a .count").attr('id', 'current-size');

		//now restore state
		capture = /\#([a-z]+)/.exec(document.URL);

		$('#send_bt').attr('data-replyto', '');
		$('#send_bt').html('Send');

		if(capture && _validStates[capture[1]]) {
			_state = capture[1];
			if(capture[1] === 'cmessage') {
				capture = /\#([a-z]+)-(\d+)/.exec(document.URL);
				stateRestore_cmessage(parseInt(capture[2]));
			} else
			if(capture[1] === 'replyall') {
				capture = /\#([a-z]+)-(\d+)/.exec(document.URL);
				stateRestore_replyall(parseInt(capture[2]));
			}
			else {
				eval("stateRestore_"+capture[1]+"()");
			}
		} else {
			stateRestore_normal();
		}
	}

	function fill_cmessage(data) {
		$('.ib-component').slideUp();
		$('#cmessage').attr('data-id', data.mid);
		$('#cmessage-from-name').html(data.from.name);
		$('#cmessage-from-email').html(data.from.email);
		$('#cmessage-from-link').attr("href", "/users/"+data.from.id);

		$('#cmessage-to-name').html(data.to.name);
		$('#cmessage-to-email').html(data.to.email);
		$('#cmessage-to-link').attr("href", "/users/"+data.to.id);

		$('#cmessage-subject').html(data.topic);
		$('#cmessage-body').html(data.body);
		$('#cmessage-time').html(moment(data.created).format('MMMM Do YYYY, h:mm:ss A'));
		$('#cmessage-time-ago').html(data.time_ago + " ago");

		_selectedMessages = [data.mid];
		$('#numMessagesSelected').html("1");

		$('#cmessage').slideDown();
		//$('#messagesToggle_bt').hide();

		$('#messagesToggle_bt').animate({width:"hide"},300, function() {
			
		});
	}
	function stateRestore_cmessage(mid) {
		$('#compose_panel').slideUp();
		$('#compose_bt').hide();

		if(_view != "sent") {
			$('#replyAll_bt').attr('href', '#replyall-'+mid);
			$('#replyAll_bt').show().removeClass('disabled');
		}

		if(_savedMessages[mid]) {
			fill_cmessage(_savedMessages[mid]);
			return;
		}

		$.getJSON('/user/inbox_get', {'mid': mid}, function(data) {
			console.log(data);
			if(data.ok) {
				_savedMessages[mid] = data;
				fill_cmessage(data);
			} else {
				history.go(-1);
			}
		});

		history.replaceState({state: 'cmessage', 'mid': mid}, "Title", "#cmessage-"+mid);
	}
	function stateRestore_compose() {
		/*console.log("Restoring compose state");*/

		$('#compose_bt').show().addClass('disabled');

		$('#message-recipients').html('');
		$('#compose-subject').val('');
		$('#compose-body').val('');

		$('.ib-component').slideUp();
		$('#ibar').slideUp();
		$('#compose_panel').slideDown();

		$('#user-search').focus();
		setTimeout(function() {
			$('#user-search').focus();
		},500);

		history.replaceState({state: 'compose'}, "Title", "#compose");
	}
	//the mid is the message you are replying to
	function stateRestore_replyall(mid) {
		console.log("___Reply All___");

		$('#replyAll_bt').show().addClass('disabled');
		$('#compose_bt').hide();

		$('.ib-component').slideUp();

		if(_savedMessages[mid]) {
			fill_cmessage(_savedMessages[mid]);
			stateRestore_replyall_continue(mid);

		} else {
			$.getJSON('/user/inbox_get', {'mid': mid}, function(data) {
				if(data.ok) {
					_savedMessages[mid] = data;
					stateRestore_replyall_continue(mid);
				} else {
					history.go(-1);
				}
			});
		}
	}
	function stateRestore_replyall_continue(mid) {
		var from = _savedMessages[mid].from;

		$('#message-recipients').html('');
		$('#message-recipients').append('<span class="label user-label" data-id="'+from.id+'"><i class="icon-user"></i>&nbsp; '+from.name+'&nbsp;<i class="icon-remove"></i></span>');

		$('#compose-subject').val("Re: "+ _savedMessages[mid].topic);
		$('#compose-body').focus();
		setTimeout(function() {
			$('#compose-body').focus();
		},500);

		$('#send_bt').attr('data-replyto', mid);
		$('#send_bt').html('Reply');

		fill_cmessage(_savedMessages[mid]);

		$('#compose_panel').slideDown();
	}
	function stateRestore_normal() {
		/*console.log("Restoring normal state");*/

		$('#compose_bt').show();
		$('#replyAll_bt').hide();

		$('#compose_bt').removeClass('disabled');
		$('#user-search-result').hide();

		if($('#compose_panel').is(":visible")) {
			$('#compose_panel').slideUp();
		}
		if($('#cmessage').is(":visible")) {
			$('#cmessage').slideUp();
		}

		updateSelected();


		$('.ib-component').slideDown();
		//$('#messagesToggle_bt').show();
		$('#messagesToggle_bt').animate({width: "show"}, 300, function() {

		});

		$('#ibar').slideDown();

		history.replaceState({state: 'normal'}, "Title", "#");
	}

	//MARKED FOR DELETION
	function messageOpen(str) {
		if(_overMessageSelect) {
			return;
		}
		//window.location = str;
	}

	function updateSelected() {
		_selectedMessages = new Array();
		$('.messageSelect').each(function(item) {
			var row = $(this).parent().parent();
			if($(this).attr('checked') === 'checked') {
				row.addClass('selected');
				_selectedMessages.push(row.attr('data-id'));
			} else {
				row.removeClass('selected');
			}
		});
		/*console.log(_selectedMessages);*/
		$('#numMessagesSelected').html(_selectedMessages.length);
	}

	function adjustMemberLinks() {
		_maxMemberSize = 0;
		_maxMrowAgoSize = 0;

		$(".member-link").each(function() {
			var w = $(this).width();
			if(w > _maxMemberSize) {
				_maxMemberSize = w;
			}
		});

		$(".message-row-ago").each(function() {
			var w = $(this).width();
			if(w > _maxMrowAgoSize) {
				_maxMrowAgoSize = w;
			}
		});
		$(".member-link").width(_maxMemberSize);
		$(".message-row-ago").width(_maxMrowAgoSize);
	}
	
</script>